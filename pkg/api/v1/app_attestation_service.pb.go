// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: app_attestation_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidationError_ErrorCode int32

const (
	ValidationError_ERROR_UNSPECIFIED         ValidationError_ErrorCode = 0
	ValidationError_ERROR_INVALID_SIGNATURE   ValidationError_ErrorCode = 1
	ValidationError_ERROR_EXPIRED_ATTESTATION ValidationError_ErrorCode = 2
	ValidationError_ERROR_INVALID_CHALLENGE   ValidationError_ErrorCode = 3
	ValidationError_ERROR_APP_MISMATCH        ValidationError_ErrorCode = 4
	ValidationError_ERROR_DEVICE_COMPROMISED  ValidationError_ErrorCode = 5
	ValidationError_ERROR_VERSION_MISMATCH    ValidationError_ErrorCode = 6
)

// Enum value maps for ValidationError_ErrorCode.
var (
	ValidationError_ErrorCode_name = map[int32]string{
		0: "ERROR_UNSPECIFIED",
		1: "ERROR_INVALID_SIGNATURE",
		2: "ERROR_EXPIRED_ATTESTATION",
		3: "ERROR_INVALID_CHALLENGE",
		4: "ERROR_APP_MISMATCH",
		5: "ERROR_DEVICE_COMPROMISED",
		6: "ERROR_VERSION_MISMATCH",
	}
	ValidationError_ErrorCode_value = map[string]int32{
		"ERROR_UNSPECIFIED":         0,
		"ERROR_INVALID_SIGNATURE":   1,
		"ERROR_EXPIRED_ATTESTATION": 2,
		"ERROR_INVALID_CHALLENGE":   3,
		"ERROR_APP_MISMATCH":        4,
		"ERROR_DEVICE_COMPROMISED":  5,
		"ERROR_VERSION_MISMATCH":    6,
	}
)

func (x ValidationError_ErrorCode) Enum() *ValidationError_ErrorCode {
	p := new(ValidationError_ErrorCode)
	*p = x
	return p
}

func (x ValidationError_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationError_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_app_attestation_service_proto_enumTypes[0].Descriptor()
}

func (ValidationError_ErrorCode) Type() protoreflect.EnumType {
	return &file_app_attestation_service_proto_enumTypes[0]
}

func (x ValidationError_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationError_ErrorCode.Descriptor instead.
func (ValidationError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{3, 0}
}

type IosAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId                string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	AttestationStatement string `protobuf:"bytes,2,opt,name=attestation_statement,json=attestationStatement,proto3" json:"attestation_statement,omitempty"`
	Challenge            []byte `protobuf:"bytes,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
	BundleId             string `protobuf:"bytes,4,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TeamId               string `protobuf:"bytes,5,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	AppVersion           string `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *IosAttestationRequest) Reset() {
	*x = IosAttestationRequest{}
	mi := &file_app_attestation_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IosAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosAttestationRequest) ProtoMessage() {}

func (x *IosAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_attestation_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosAttestationRequest.ProtoReflect.Descriptor instead.
func (*IosAttestationRequest) Descriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{0}
}

func (x *IosAttestationRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *IosAttestationRequest) GetAttestationStatement() string {
	if x != nil {
		return x.AttestationStatement
	}
	return ""
}

func (x *IosAttestationRequest) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *IosAttestationRequest) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *IosAttestationRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *IosAttestationRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type AndroidAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestationStatement string `protobuf:"bytes,1,opt,name=attestation_statement,json=attestationStatement,proto3" json:"attestation_statement,omitempty"`
	Challenge            []byte `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	PackageName          string `protobuf:"bytes,3,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	SignatureDigest      string `protobuf:"bytes,4,opt,name=signature_digest,json=signatureDigest,proto3" json:"signature_digest,omitempty"`
	AppVersionCode       int64  `protobuf:"varint,5,opt,name=app_version_code,json=appVersionCode,proto3" json:"app_version_code,omitempty"`
}

func (x *AndroidAttestationRequest) Reset() {
	*x = AndroidAttestationRequest{}
	mi := &file_app_attestation_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AndroidAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAttestationRequest) ProtoMessage() {}

func (x *AndroidAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_attestation_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAttestationRequest.ProtoReflect.Descriptor instead.
func (*AndroidAttestationRequest) Descriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{1}
}

func (x *AndroidAttestationRequest) GetAttestationStatement() string {
	if x != nil {
		return x.AttestationStatement
	}
	return ""
}

func (x *AndroidAttestationRequest) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *AndroidAttestationRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *AndroidAttestationRequest) GetSignatureDigest() string {
	if x != nil {
		return x.SignatureDigest
	}
	return ""
}

func (x *AndroidAttestationRequest) GetAppVersionCode() int64 {
	if x != nil {
		return x.AppVersionCode
	}
	return 0
}

type AttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid          bool               `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	AttestationToken string             `protobuf:"bytes,2,opt,name=attestation_token,json=attestationToken,proto3" json:"attestation_token,omitempty"`
	ExpiryTime       int64              `protobuf:"varint,3,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	ValidationErrors []*ValidationError `protobuf:"bytes,4,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	RiskSignals      *RiskSignals       `protobuf:"bytes,5,opt,name=risk_signals,json=riskSignals,proto3" json:"risk_signals,omitempty"`
}

func (x *AttestationResponse) Reset() {
	*x = AttestationResponse{}
	mi := &file_app_attestation_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationResponse) ProtoMessage() {}

func (x *AttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_attestation_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationResponse.ProtoReflect.Descriptor instead.
func (*AttestationResponse) Descriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{2}
}

func (x *AttestationResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *AttestationResponse) GetAttestationToken() string {
	if x != nil {
		return x.AttestationToken
	}
	return ""
}

func (x *AttestationResponse) GetExpiryTime() int64 {
	if x != nil {
		return x.ExpiryTime
	}
	return 0
}

func (x *AttestationResponse) GetValidationErrors() []*ValidationError {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

func (x *AttestationResponse) GetRiskSignals() *RiskSignals {
	if x != nil {
		return x.RiskSignals
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode ValidationError_ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=attestation.service.v1.ValidationError_ErrorCode" json:"error_code,omitempty"`
	Message   string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_app_attestation_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_app_attestation_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{3}
}

func (x *ValidationError) GetErrorCode() ValidationError_ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ValidationError_ERROR_UNSPECIFIED
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RiskSignals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRooted      bool   `protobuf:"varint,1,opt,name=is_rooted,json=isRooted,proto3" json:"is_rooted,omitempty"`
	IsEmulator    bool   `protobuf:"varint,2,opt,name=is_emulator,json=isEmulator,proto3" json:"is_emulator,omitempty"`
	IsAppTampered bool   `protobuf:"varint,3,opt,name=is_app_tampered,json=isAppTampered,proto3" json:"is_app_tampered,omitempty"`
	OsVersion     string `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	DeviceModel   string `protobuf:"bytes,5,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
}

func (x *RiskSignals) Reset() {
	*x = RiskSignals{}
	mi := &file_app_attestation_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskSignals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskSignals) ProtoMessage() {}

func (x *RiskSignals) ProtoReflect() protoreflect.Message {
	mi := &file_app_attestation_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskSignals.ProtoReflect.Descriptor instead.
func (*RiskSignals) Descriptor() ([]byte, []int) {
	return file_app_attestation_service_proto_rawDescGZIP(), []int{4}
}

func (x *RiskSignals) GetIsRooted() bool {
	if x != nil {
		return x.IsRooted
	}
	return false
}

func (x *RiskSignals) GetIsEmulator() bool {
	if x != nil {
		return x.IsEmulator
	}
	return false
}

func (x *RiskSignals) GetIsAppTampered() bool {
	if x != nil {
		return x.IsAppTampered
	}
	return false
}

func (x *RiskSignals) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *RiskSignals) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

var File_app_attestation_service_proto protoreflect.FileDescriptor

var file_app_attestation_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x49, 0x6f, 0x73, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x19, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x13,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x72,
	0x69, 0x73, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x0f, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x41, 0x54,
	0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x41,
	0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04,
	0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x4f, 0x4d, 0x49, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x52,
	0x69, 0x73, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x52, 0x6f, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x70, 0x70, 0x54, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x32, 0x8b, 0x02, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x14,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6f, 0x73, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6f,
	0x73, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x18, 0x5a, 0x16, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_app_attestation_service_proto_rawDescOnce sync.Once
	file_app_attestation_service_proto_rawDescData = file_app_attestation_service_proto_rawDesc
)

func file_app_attestation_service_proto_rawDescGZIP() []byte {
	file_app_attestation_service_proto_rawDescOnce.Do(func() {
		file_app_attestation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_attestation_service_proto_rawDescData)
	})
	return file_app_attestation_service_proto_rawDescData
}

var file_app_attestation_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_attestation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_app_attestation_service_proto_goTypes = []any{
	(ValidationError_ErrorCode)(0),    // 0: attestation.service.v1.ValidationError.ErrorCode
	(*IosAttestationRequest)(nil),     // 1: attestation.service.v1.IosAttestationRequest
	(*AndroidAttestationRequest)(nil), // 2: attestation.service.v1.AndroidAttestationRequest
	(*AttestationResponse)(nil),       // 3: attestation.service.v1.AttestationResponse
	(*ValidationError)(nil),           // 4: attestation.service.v1.ValidationError
	(*RiskSignals)(nil),               // 5: attestation.service.v1.RiskSignals
}
var file_app_attestation_service_proto_depIdxs = []int32{
	4, // 0: attestation.service.v1.AttestationResponse.validation_errors:type_name -> attestation.service.v1.ValidationError
	5, // 1: attestation.service.v1.AttestationResponse.risk_signals:type_name -> attestation.service.v1.RiskSignals
	0, // 2: attestation.service.v1.ValidationError.error_code:type_name -> attestation.service.v1.ValidationError.ErrorCode
	1, // 3: attestation.service.v1.AppAttestationService.VerifyIosAttestation:input_type -> attestation.service.v1.IosAttestationRequest
	2, // 4: attestation.service.v1.AppAttestationService.VerifyAndroidAttestation:input_type -> attestation.service.v1.AndroidAttestationRequest
	3, // 5: attestation.service.v1.AppAttestationService.VerifyIosAttestation:output_type -> attestation.service.v1.AttestationResponse
	3, // 6: attestation.service.v1.AppAttestationService.VerifyAndroidAttestation:output_type -> attestation.service.v1.AttestationResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_app_attestation_service_proto_init() }
func file_app_attestation_service_proto_init() {
	if File_app_attestation_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_attestation_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_attestation_service_proto_goTypes,
		DependencyIndexes: file_app_attestation_service_proto_depIdxs,
		EnumInfos:         file_app_attestation_service_proto_enumTypes,
		MessageInfos:      file_app_attestation_service_proto_msgTypes,
	}.Build()
	File_app_attestation_service_proto = out.File
	file_app_attestation_service_proto_rawDesc = nil
	file_app_attestation_service_proto_goTypes = nil
	file_app_attestation_service_proto_depIdxs = nil
}
